<%
  # Application Builder Widget
  # Integration with Watson QA API service
  # Reference http://this is a pointer to the location to get information on this 
  # Purpose: this widget demonstrates integration with a Watson QAAPI REST web service
  # It reads in the user's query on the search page and sends it to the QAAPI REST service
  # the output from the REST service is JSON. This JSON response is parsed and displayed to the user.

require 'net/http'

# Determine the endpoint for the proxy
# This assumes that the proxy is deployed 
# to the same server as the current App Builder.
origin = URI.parse(request.original_url)
endpoint_builder = {
  :host => origin.host,
  :port => origin.port,
  :scheme => origin.scheme,
  :path => '/proxy/qa/ask/'
}

url = URI::HTTP.build(endpoint_builder)

# set the question parameter for the REST service to the query from  the page
data = {
  :question => @subject.query
}.to_json

req = Net::HTTP::Post.new(url.to_s)
req.body = data
req.content_type = 'content/json'


response = Net::HTTP.start(url.hostname, url.port) do |http|
  http.request(req)
end

answers = JSON.parse(response.body).first


#-----------------------
# Now for the JavaScript that will facilitate user interactions
# for displaying answerText and evidenceText. 

%>

<script>

$(function() {
  $(".toggle_it").click(function() {
    $(this).parent().parent().find(".details_text").first().slideToggle();
    return false;
  });
});

</script>
  


<%
# Display the response. This example is a very simple display 
# of the question that was asked,  the answers received and 
# the evidence for each of the answers. Since the answer text
# can get quite long you can truncate the output and allow the user
# to toggle the display of the text.
%>
    
<h3>Results for the question <b> <%= answers["question"]["questionText"] %></b></h3>

<%
title_length = 20    # define number of words to limit the answer output title to

# Iterate over the answers
answers["question"]["answers"].each do |answer|
  # title = answer["text"].split[0...title_length].join(' ') + '...'
  title = answer["text"]
  
  id = answer["id"]
  evidence = answers["question"]["evidencelist"][id]["text"]
%>

  <div class="answer" id="answer-<%= id %>">
    <div class="title"><%= id %>. <%= title %></div>
    <div class="details"><strong>Confidence Level:</strong> <%= answer["confidence"] %></div>
    <div class="details"><a href="_blank" class="toggle_it">Show answer details</a></div>
    
    <div class="details details_text" style="display:none;">  
      <%= render inline: answer["formattedText"].html_safe %>
    </div>
    
    <div class="details" id="evidence-<%= id %>">
      <div><a href="_blank" class="toggle_it">Show Evidence:</a></div>
      <div class="details_text" style="display:none;">  
        <%= evidence %>
      </div>
    </div>  
  </div>

<% end # the answer each loop %>
      
                                         
<% #define the css styling for the display. 
%>

<style>
.details
{
  font-size: .875em;
  margin: 3px;
}

.answer
{
  border-bottom: 1px solid #e6e6e6;
  margin-bottom: 2em;
  padding-bottom: 1em;
}

</style>

